Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak
Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

Yaz stajımı Samsun Teknokent’de isTechSoft firmasında yaptım. Bir start-up firmasıydı. Yapay zeka ile ilgili olduğum için içerisinde yapay zeka olan bir projeye dahil oldum. Proje de geçen sene hypercasual oyun videolarının iyi kötü olarak sınıflandırılması ile başlamış şimdi oyuncu modellemesine geçilmiş. Yaz stajımın devamı olarak projeme ve staj deneyimime devam etmekteyim. Vasıf hocamıza projemdeki oyuncu kümeleme modeli hakkında sorularım olmuştu. Proje süresince maalesef gereksinim analizi, proje sınırları oluşturma gibi imkanlarım olmadı, bana verilen konu başlığı ve içeriği ile projeye başladım. Belki de bu yüzden bazı noktalarda takılıyorum.
Proje içeriğini sizinle de paylaşayım. Oyun kodları içerisine yerleştirilen kodlar vasıtasıyla oyunlardan veriler çekiyoruz. Bu verileri event olarak adlandırabiliriz. Stajımın başlangıcında bana verilen Unity ile yazılmış hypercasual oyunun içerisine firebase kodları ile oyuncu kümeleme modeli için gerekli olduğunu düşündüğüm yaklaşık 20 event için veri toplama kodu yazdım. Bu aşamada ben diğer proje işleri ile uğraşırken tamamı sayısal veya sayısallaştırılmış event verilerini diğer ekip arkadaşlarıma verdim ve projemizin uygulaması olan web tarafını yazdım. Web tarafında Firebase Analytic dashboardda olduğu üzere oyun metrik analiz sayfası (oyuncuların oyunda ne kadar kaldıkları, retention değerleri gibi verilerin grafikleştirildiği sayfa) ve diğer kısımları yazdım.
Bu nokta da verilerimizi size biraz açıklamak isterim.
Firebase tarafında veriler No-SQL tarzı bir veri tabanında saklandığından kabataslak veri tabanı formu şu şekilde
OyunAdı
OyuncuID
SessionID
LevelID
Event1:value
Event2: value
…..
Burada session oyuna bir girişi ifade ediyor. Oyuncunun oyuna girip, oynayıp, çıktığı süreyi ifade ediyor. Oyun bir hypercasual oyun olduğundan bitiş çizgisine ulaşıldığı süre boyunca sonsuz bir ilerleyiş gözlenebilir. Dolayısıyla oyuna girdiğimde alt düğümde bizi leveller karşılıyor. Sabah oyuna girdim 5 oyun oynadım. Akşam bir kez daha girdim 3 oyun oynadım. O halde gün içerisinde 2 session toplam da 8 level olmak üzere veri tabanına aşağıda gördüğünüz şekilde bir veri girişi olacaktır.



Session1
•	level1
•	level2
•	level3
•	level4
•	level5
Session2
•	level6
•	level7
•	level8
Veri tabanı formunda level düğümlerin içinde de eventlerin olduğunu görüyorsunuz. Bunlar da oyun içerisinde toplanan oyuncunun bir kutuya vurup vurmadığı, ne kadar coin topladığı, bir kapıdan ne kadar geçtiği, kazanıp kazanamadığının bilgisi, oyunda ne kadar süre geçirdiğinin bilgisi gibi sayısal yaklaşık 20 veriyi kapsamaktadır.
Bu veri tabanını excel formatına aldığımda ya da tablosal, matris formata aldığımda verilerim şu şekilde oluyor,
oyuncuid - sessionid - levelid 	- event1 	- event2 	- event3 	- event4 
1 	    - 123	- a123 		- .45 	 	- .896 		- 1000 		- 1 
1 	    - 123 	- a896 		- .75 		- 12 		- .125 		- 0 
2 	    - 521 	- b456 		- .12 		- 41 		- .456 		- 1 
2 	    - 456 	- a146 		- .86 		- 97 		- .138 		- 0
2	    - 456 	- s154 		- .0 		- 13 		- .496		- 0 
3 	    - 741 	- l745 		- .5 		- 46 		- .826 		- 1 
3	    - 741	 - b923 	- .73		- 83 		- .86 		- 1 
3	   - 852		 - v452 	- .19 		- 100 		- .431 		- 0 
3	   - 852 	- n126 		- .35 		- 2 		- .946 		- 1
Bize projeyi veren işverenimiz başlangıçta bu verileri toplayıp basit kmeans ile kümeleme yapmamızı ardından kullanıcıları kümelere göre bölmemizi ve her bir kümenin oyun eventlerindeki değer aralıklarını bulmamızı söylemişti. Sonuçları da web ara yüzünde görselleştirmemizi, belgelendirmemizi istemişti. Müşteri sisteme kayıt olur, oyununu kayıt eder. Gerekli SDK belgelerini alıp oyununa event toplama kodlarını dahil eder. Yeteri kadar veri oluştuğuna emin olduğumuz vakit model işlemlerine başlanır. Verilerden kümeleme yapılır ve kümeler, kimlerin hangi kümeye ait olduğu ve kümelerin içerikleri web sitesinde gösterilir. Bundan sonraki aşama müşteriye kalmış. Müşteri oyuncularının kümelerine göre oyununda oyuncularının önüne farklı oyun tasarımları ve özellikleri çıkarabilir. Proje böyle bir senaryoya sahip.
Biz bize söylenene göre sadece eventleri alarak basit bir kümeleme yaptık. Her bir vektör bir satırdı. Satırlar yani vektörler oyuncunun bir levellik oynayışını temsil ediyor. Dolayısıyla kümeleme algoritmamıza veri setimizi verdiğimizde her bir satırı vektör olarak alıp satırlar üzerinden kümeleme yapmış oluyor. Örneğin yukarıdaki veri tablosunda oyuncu-1 için ilk oynayışı 3. kümeye, ikinci oynayışı da 1. kümeye dahil olabilir. Bu da istediğimiz sonuç değil. Ben her bir level oynanışını değil oyuncuların kendisini kümelemek istiyorum.
Bu nokta da nasıl bir kümeleme yapmak istediğimi sorabilirsiniz çünkü makalenizi okuduğum kadarıyla oyuncuların davranışlarını analiz edip Killer, Achievers gibi kümeler elde ediyorsunuz. Aslında bizim projemizde kümelemenin nasıl bir sonucu olduğu şu aşama da çok önemli değil çünkü bir oyunun oyuncularının kümesi bize bir şey ifade etmeyecek. Fakat yine de düz bir kümeleme ile şu an ki halinden bahsedersek levelleri başarılı level başarısız level olmak üzere veri çeşitliliğine göre bir kümeleme ortaya çıkıyor. Yine her oyun türü farklı olabileceğinden ve toplanan veriler, oyuncuların oynayışları farklı olabileceğinden kümelere atamalar yapmak, ne olduklarına önceden karar vermeye çalışmak benim projem de olması gereken bir şey değil.
Vasıf hocamızla da konuştuğumda bu kısımda sonuçlardan geriye doğru giderek kümelerin ne ifade ettiklerini anlamaya çalışmalıyım. Belki açıklanabilirlik ekleyebiliriz.
Uzattığım için kusura bakmayın ama projeyi uzun uzun anlatmamın soracağım soru için gerekli olduğunu düşündüm. Şimdi asıl sormak istediğim noktaya geliyorum.
Vasıf hocamız ile görüşmem de leveller üzerinden kümeleme yaptığımı ama aslında oyuncu kümelemesi yapmam gerektiğini söylemiştim. Konuşmamız da aklıma bahçe temsili geldi, sizinle de paylaşayım.
İris veri setinde çiçek ve çiçeğin 4 özelliği var. Buna göre veri setindeki çiçekler kümeleniyor. Fakat burada tek bir çiçeği onun özelliklerine göre kümeliyoruz. Benim projem de kocaman bir bahçem var, bahçede de bir sürü çiçek var. Çiçeklerin çoğunluğu papatya ama arada güller, sümbüller ve başka çiçekler de var. Ve bu çiçekler de büyük küçük, rengi açık, koyu gibi farklı özelliklere sahip. Bir başka bahçede de güller var ve yine başka çiçekler de var ama çoğunluk gül. Yapmam gereken bahçeleri analiz edip bahçe-1’e papatya bahçe-2’ye gül bahçesi diyebilmem. Burada bahçe oyuncuları, çiçekler levelleri, çiçeklerin özellikleri de eventleri temsil etmektedir.
Vasıf hoca ile bu temsilimi paylaştığımda doğru yolda olduğumu söyleyip sizden, makalenizden ve kendi oyuncu modellemesi makalesinden bahsetti. Hocamız ile görüşmemden sonra araştırmalarımda özellik matrisi terimine de rastladım. Daha sonra resimlerden kedi köpek kümelemesi modelleri de aklıma geldi. Bu ikisinden şu şekilde birkaç yol çıkarmaya çalıştım. Levellerimin her birini resimlerin bir pikseli olarak düşünsem tüm bu, bir oyuncunun levelleri resimlerini-matrislerini kümeleme algoritmama versem fikri ilk düşündüğüm fikirdi. Benzer olarak özellik matrisinden yola çıkarak da sütunları event, satırları level olan matrislerin her biri bir oyuncuyu temsil etse ve bunları kümelesem ikinci fikrimdi. Ayrıca PCA ile matrislerimi tek bir boyuta indirgemek, demek istediğim bir oyuncunun tüm satırlarını bir satıra indirgesem ve bu bir vektörü oyuncunun genel davranışı olarak kabul edip kümelemek de düşündüğüm fikirler arasındaydı ki bu indirgeme fikri ilk iki saydığım fikre zaten uyarlanır bir fikir olabilir.
Açıklayıcı bir şekilde yazmaya çalıştım umarım projemi ve sorunumu iyi bir şekilde anlatabilmişimdir.
Sizden istediğim bana tavsiyeler verebilmeniz. Oyuncu kümelemesi için nasıl bir yol izleyebileceğim hakkında fikir verebilmeniz. Aklıma fikirler geliyor fakat doğrular mı, doğru olduklarını nasıl anlarım, bu fikirleri nasıl uygularım aşamasında zoruluk yaşıyorum. Umarım yardım edebilirsiniz.
Şimdiden teşekkür ederim.
Ayşenur Tak

